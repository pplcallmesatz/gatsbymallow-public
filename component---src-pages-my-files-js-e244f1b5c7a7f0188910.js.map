{"version":3,"sources":["webpack:///./src/pages/my-files.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_ref","data","console","log","a","createElement","allFile","edges","map","_ref2","index","node","key","relativePath","prettySize","extension","birthTime","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","gatsby__WEBPACK_IMPORTED_MODULE_1__","ListLink","props","to","children"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAIeE,EAAA,iBAAAO,GAAc,IAAXC,EAAWD,EAAXC,KAEd,OADAC,QAAQC,IAAIF,GAERJ,EAAAO,EAAAC,cAACN,EAAA,EAAD,KACAF,EAAAO,EAAAC,cAAA,WACAR,EAAAO,EAAAC,cAAA,6BACJR,EAAAO,EAAAC,cAAA,aACAR,EAAAO,EAAAC,cAAA,aACAR,EAAAO,EAAAC,cAAA,UACAR,EAAAO,EAAAC,cAAA,0BACAR,EAAAO,EAAAC,cAAA,wBACAR,EAAAO,EAAAC,cAAA,uBACAR,EAAAO,EAAAC,cAAA,yBAGAR,EAAAO,EAAAC,cAAA,aACCJ,EAAKK,QAAQC,MAAMC,IAAI,SAAAC,EAAWC,GAAX,IAAGC,EAAHF,EAAGE,KAAH,OAChBd,EAAAO,EAAAC,cAAA,MAAIO,IAAKF,GACbb,EAAAO,EAAAC,cAAA,UAAKM,EAAKE,cACVhB,EAAAO,EAAAC,cAAA,UAAKM,EAAKG,YACVjB,EAAAO,EAAAC,cAAA,UAAKM,EAAKI,WACVlB,EAAAO,EAAAC,cAAA,UAAKM,EAAKK,mBAUX,IAAMrB,EAAK,kCCnClB,IAAsBsB,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAArB,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAA0B,EAAA/B,EAAA,IAAAgC,EAAAhC,EAAAO,EAAAwB,GAAA/B,EAAAG,EAAAD,EAAA,sBAAA8B,EAAAnB,IAAAb,EAAA,KAAAA,EAAA,GAcyBiC,QAAOC,QAELC,IAAMC,cAAc,+ECMhCC,UAjBU,SAAA5B,GAAiC,IAA9B6B,EAA8B7B,EAA9B6B,SAAUC,EAAoB9B,EAApB8B,cACpC,OAAKA,EAGEJ,IAAMrB,cAAc0B,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,wCCPX,IAAAtC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAuC,EAAA5C,EAAA,KAEM6C,EAAW,SAAAC,GAAK,OACtBxC,EAAAO,EAAAC,cAAA,UACAR,EAAAO,EAAAC,cAAC8B,EAAA,EAAD,CAAMG,GAAID,EAAMC,IAAKD,EAAME,YAIZ9C,EAAA,WAAAO,GAAA,IAAGuC,EAAHvC,EAAGuC,SAAH,OACf1C,EAAAO,EAAAC,cAAA,WACAR,EAAAO,EAAAC,cAAA,cACAR,EAAAO,EAAAC,cAAC8B,EAAA,EAAD,CAAMG,GAAG,KACTzC,EAAAO,EAAAC,cAAA,0BAEAR,EAAAO,EAAAC,cAAA,UACAR,EAAAO,EAAAC,cAAC+B,EAAD,CAAUE,GAAG,KAAb,QACIzC,EAAAO,EAAAC,cAAC+B,EAAD,CAAUE,GAAG,WAAb,SACAzC,EAAAO,EAAAC,cAAC+B,EAAD,CAAUE,GAAG,aAAb,aAGHC","file":"component---src-pages-my-files-js-e244f1b5c7a7f0188910.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nexport default ({ data }) => {\n    console.log(data)\n    return (\n        <Layout>\n        <div>\n        <h1>My Site's Files</h1>\n    <table>\n    <thead>\n    <tr>\n    <th>relativePath</th>\n    <th>prettySize</th>\n    <th>extension</th>\n    <th>birthTime</th>\n    </tr>\n    </thead>\n    <tbody>\n    {data.allFile.edges.map(({ node }, index) => (\n            <tr key={index}>\n        <td>{node.relativePath}</td>\n        <td>{node.prettySize}</td>\n        <td>{node.extension}</td>\n        <td>{node.birthTime}</td>\n        </tr>\n))}\n</tbody>\n    </table>\n    </div>\n    </Layout>\n)\n}\n\nexport const query = graphql`\n  query {\n    allFile {\n      edges {\n        node {\n          relativePath\n          prettySize\n          extension\n          birthTime(fromNow: true)\n        }\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nconst ListLink = props => (\n<li>\n<Link to={props.to}>{props.children}</Link>\n    </li>\n)\n\nexport default ({ children }) => (\n<div >\n<header >\n<Link to=\"/\" >\n<h3 >MySweetSite</h3>\n</Link>\n<ul >\n<ListLink to=\"/\">Home</ListLink>\n    <ListLink to=\"/about/\">About</ListLink>\n    <ListLink to=\"/contact/\">Contact</ListLink>\n    </ul>\n    </header>\n{children}\n</div>\n)"],"sourceRoot":""}