{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_ref","post","data","markdownRemark","imageCheck","frontmatter","dataloop","dataLoop","a","createElement","title","src","image","publicURL","className","dangerouslySetInnerHTML","__html","html","map","m","module","exports","require","default","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","gatsby__WEBPACK_IMPORTED_MODULE_1__","ListLink","props","to","children"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAIeE,EAAA,iBAAAO,GAAc,IACnBC,EADmBD,EAAXE,KACIC,eACZC,EAAaH,EAAKI,YAAYD,WAChCE,EAAWL,EAAKI,YAAYE,SAChC,OACAV,EAAAW,EAAAC,cAAA,WACIZ,EAAAW,EAAAC,cAACV,EAAA,EAAD,KACIF,EAAAW,EAAAC,cAAA,UAAKR,EAAKI,YAAYK,OACrBN,EAAcP,EAAAW,EAAAC,cAAA,OAAKE,IAAKV,EAAKI,YAAYO,MAAMC,YAAgB,GAChEhB,EAAAW,EAAAC,cAAA,OAAKK,UAAW,SAAUC,wBAAyB,CAAEC,OAAQf,EAAKgB,QAClEpB,EAAAW,EAAAC,cAAA,OAAKK,UAAW,SACZjB,EAAAW,EAAAC,cAAA,WACAZ,EAAAW,EAAAC,cAAA,oBAECH,EAASY,IAAI,SAAAX,GAAQ,OACtBV,EAAAW,EAAAC,cAAA,MAAIK,UAAW,4BAA8BP,QAQtD,IAAMZ,EAAK,kCC3BlB,IAAsBwB,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAvB,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAA4B,EAAAjC,EAAA,IAAAkC,EAAAlC,EAAAO,EAAA0B,GAAAjC,EAAAG,EAAAD,EAAA,sBAAAgC,EAAAjB,IAAAjB,EAAA,KAAAA,EAAA,GAcyBmC,QAAOC,QAELC,IAAMC,cAAc,+ECMhCC,UAjBU,SAAA9B,GAAiC,IAA9B+B,EAA8B/B,EAA9B+B,SAAUC,EAAoBhC,EAApBgC,cACpC,OAAKA,EAGEJ,IAAMnB,cAAcwB,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,wCCPX,IAAAxC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAyC,EAAA9C,EAAA,KAEM+C,EAAW,SAAAC,GAAK,OACtB1C,EAAAW,EAAAC,cAAA,UACAZ,EAAAW,EAAAC,cAAC4B,EAAA,EAAD,CAAMG,GAAID,EAAMC,IAAKD,EAAME,YAIZhD,EAAA,WAAAO,GAAA,IAAGyC,EAAHzC,EAAGyC,SAAH,OACf5C,EAAAW,EAAAC,cAAA,WACAZ,EAAAW,EAAAC,cAAA,cACAZ,EAAAW,EAAAC,cAAC4B,EAAA,EAAD,CAAMG,GAAG,KACT3C,EAAAW,EAAAC,cAAA,0BAEAZ,EAAAW,EAAAC,cAAA,UACAZ,EAAAW,EAAAC,cAAC6B,EAAD,CAAUE,GAAG,KAAb,QACI3C,EAAAW,EAAAC,cAAC6B,EAAD,CAAUE,GAAG,WAAb,SACA3C,EAAAW,EAAAC,cAAC6B,EAAD,CAAUE,GAAG,aAAb,aAGHC","file":"component---src-templates-blog-post-js-5ba740eab718e7909c37.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nexport default ({ data }) => {\n    const post = data.markdownRemark\n    const imageCheck = post.frontmatter.imageCheck;\n    var dataloop = post.frontmatter.dataLoop;\n    return (\n    <div>\n        <Layout>\n            <h1>{post.frontmatter.title}</h1>\n            {imageCheck ?( <img src={post.frontmatter.image.publicURL} />):('')}\n            <div className={\"myPOst\"} dangerouslySetInnerHTML={{ __html: post.html }} />\n            <div className={\"Dasam\"}>\n                <hr/>\n                <h1>Dasam</h1>\n            </div>\n                {dataloop.map(dataLoop =>\n                <h2 className={\"tag is-primary is-medium\"} >{dataLoop}</h2>\n                )}\n        </Layout>\n    </div>\n)\n}\n\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        image {\n            publicURL\n            base\n        }\n        imageCheck\n        dataLoop\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nconst ListLink = props => (\n<li>\n<Link to={props.to}>{props.children}</Link>\n    </li>\n)\n\nexport default ({ children }) => (\n<div >\n<header >\n<Link to=\"/\" >\n<h3 >MySweetSite</h3>\n</Link>\n<ul >\n<ListLink to=\"/\">Home</ListLink>\n    <ListLink to=\"/about/\">About</ListLink>\n    <ListLink to=\"/contact/\">Contact</ListLink>\n    </ul>\n    </header>\n{children}\n</div>\n)"],"sourceRoot":""}